Link : https://leetcode.com/problems/flood-fill/
Example 1:
Input: image = [[1,1,1],[1,1,0],[1,0,1]], sr = 1, sc = 1, color = 2
Output: [[2,2,2],[2,2,0],[2,0,1]]
Explanation: From the center of the image with position (sr, sc) = (1, 1) (i.e., the red pixel), all pixels connected by a path of the same color as the starting pixel (i.e., the blue pixels) are colored with the new color.

Code : 

class Solution {
    public int[][] floodFill(int[][] image, int sr, int sc, int newColor) {
        int target = image[sr][sc];
        if(newColor == target)
            return image;
        dfs(sr,sc,target,newColor,image);
        return image;
    }
    private void dfs(int row,int col,int target,int newColor,int[][] image){
        if(row < image.length && row >= 0 && col < image[0].length && col >= 0 && image[row][col] == target) {
            image[row][col] = newColor;
            System.out.print(row);
            System.out.println(col);
            dfs(row-1,col,target,newColor,image);
            dfs(row,col-1,target,newColor,image);
            dfs(row+1,col,target,newColor,image);
            dfs(row,col+1,target,newColor,image);
        }
    }
}
