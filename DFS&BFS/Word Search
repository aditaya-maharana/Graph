Link : https://leetcode.com/problems/word-search/
PD : 
Input: board = [["A","B","C","E"],
                ["S","F","C","S"],
                ["A","D","E","E"]] , word = "ABCCED"
Output: true

Code : 
class Solution {
    boolean found = false;
    private boolean dfs(int i,int j,char[][] board,String word,int count){
        if(count == word.length())
            return true;
        if(i >= 0 && i < board.length && j >= 0 && j < board[0].length && board[i][j] == word.charAt(count)){
            char temp = board[i][j];
            board[i][j] = '*';
            found = dfs(i+1,j,board,word,count+1) || dfs(i-1,j,board,word,count+1) ||
                dfs(i,j+1,board,word,count+1) || dfs(i,j-1,board,word,count+1);
            board[i][j] = temp;
        }
        return found;
    }
    public boolean exist(char[][] board, String word) {
        int m = board.length;
        int n = board[0].length;
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if((board[i][j] == word.charAt(0)) && dfs(i,j,board,word,0) )
                    return true;
            }
        }
        return false;
    }
}
